{"version":3,"sources":["section-scroll.js"],"names":["sectionList","options","previousSection","previousScrollY","window","scrollY","getCurrentSection","element","getBoundingClientRect","top","scrollToSection","sectionToScroll","document","body","style","overflowY","removeEventListener","scrollHandler","scroll","offsetTop","behavior","before","resetOverflow","setInterval","Math","floor","clearInterval","addEventListener","after","nextSection","previousElementSibling","bottom"],"mappings":"cAAe,CAACA,EAAaC,KACzB,IACIC,EADAC,EAAkBC,OAAOC,QAG7B,MAAMC,EAAoB,KACtB,IAAK,IAAIC,KAAWP,EAChB,GAAIO,EAAQC,wBAAwBC,KAAO,EACvC,OAAOF,GAIbG,EAAmBC,IAErBC,SAASC,KAAKC,MAAMC,UAAY,SAChCX,OAAOY,oBAAoB,SAAUC,GACrCb,OAAOc,OAAO,CAAET,IAAKE,EAAgBQ,UAAWC,SAAU,WAEtDnB,EAAQoB,QAAQpB,EAAQoB,OAAOV,EAAiBT,GAGpD,MAAMoB,EAAgBC,YAAY,KAIkC,IAA5DC,KAAKC,MAAMd,EAAgBH,wBAAwBC,OACnDiB,cAAcJ,GACdV,SAASC,KAAKC,MAAMC,UAAY,GAChCX,OAAOuB,iBAAiB,SAAUV,GAE9BhB,EAAQ2B,OAAO3B,EAAQ2B,MAAMjB,EAAiBT,GAClDA,EAAkBS,IAEvB,KAEDM,EAAgB,KAElB,GAAIb,OAAOC,QAAUF,EAAiB,CAClC,IAAI0B,EAAcvB,IAEduB,GAAeA,EAAYrB,wBAAwBC,IAAM,GACzDC,EAAgBmB,OAInB,CACD,IAAI3B,EAAkBI,IAAoBwB,uBAEtC5B,GAAmBA,EAAgBM,wBAAwBuB,OAAS,GACpErB,EAAgBR,GAIxBC,EAAkBC,OAAOC,SAI7BD,OAAOuB,iBAAiB,SAAUV,GAC9BhB,EAAQoB,QAAQpB,EAAQoB,OAAOf,IAAqBA,KACpDL,EAAQ2B,OAAO3B,EAAQ2B,MAAMtB,IAAqBA,KACtDJ,EAAkBI","sourcesContent":["export default (sectionList, options) => {\r\n    let previousScrollY = window.scrollY;\r\n    let previousSection;\r\n\r\n    const getCurrentSection = () => {\r\n        for (let element of sectionList) {\r\n            if (element.getBoundingClientRect().top >= 0) {\r\n                return element;\r\n            }\r\n        }\r\n    };\r\n    const scrollToSection = (sectionToScroll) => {\r\n        // Scroll behaviour can only prevented by CSS \"overflow: hidden\" but not event.preventDefault()\r\n        document.body.style.overflowY = 'hidden';\r\n        window.removeEventListener('scroll', scrollHandler);\r\n        window.scroll({ top: sectionToScroll.offsetTop, behavior: 'smooth' });\r\n\r\n        if (options.before) options.before(sectionToScroll, previousSection);\r\n\r\n        // Wait for scroll finish\r\n        const resetOverflow = setInterval(() => {\r\n            /* If window reach target section \r\n               getBoundingClientRect().top may be float number so we need to floor() it \r\n               trunc() is not the suitable function to use as it will clear the interval too early (before the scroll actually finish) while scrolling up */\r\n            if (Math.floor(sectionToScroll.getBoundingClientRect().top) === 0) { // To do: && navbarBottom === 0\r\n                clearInterval(resetOverflow);\r\n                document.body.style.overflowY = '';\r\n                window.addEventListener('scroll', scrollHandler);\r\n\r\n                if (options.after) options.after(sectionToScroll, previousSection);\r\n                previousSection = sectionToScroll;\r\n            }\r\n        }, 10);\r\n    };\r\n    const scrollHandler = () => {\r\n        // Scrolling down\r\n        if (window.scrollY > previousScrollY) {\r\n            let nextSection = getCurrentSection();\r\n            // If next section exists and user scroll through topmost pixel of next section\r\n            if (nextSection && nextSection.getBoundingClientRect().top > 0) {\r\n                scrollToSection(nextSection);\r\n            }\r\n        }\r\n        // Scrolling up\r\n        else {\r\n            let previousSection = getCurrentSection().previousElementSibling;\r\n            // If previous section exists and user scroll through bottommost pixel of previous section\r\n            if (previousSection && previousSection.getBoundingClientRect().bottom > 0) {\r\n                scrollToSection(previousSection);\r\n            }\r\n        }\r\n\r\n        previousScrollY = window.scrollY;\r\n    };\r\n\r\n    // Initialize sectionScroll\r\n    window.addEventListener('scroll', scrollHandler);\r\n    if (options.before) options.before(getCurrentSection(), getCurrentSection());\r\n    if (options.after) options.after(getCurrentSection(), getCurrentSection());\r\n    previousSection = getCurrentSection();\r\n}"]}